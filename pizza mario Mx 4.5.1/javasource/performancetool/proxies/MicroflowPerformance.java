// This file was generated by Mendix Business Modeler 4.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package performancetool.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class MicroflowPerformance
{
	private final IMendixObject microflowPerformanceMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "PerformanceTool.MicroflowPerformance";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Duration("Duration"),
		Timestamp("Timestamp"),
		Key("Key"),
		IsMain("IsMain"),
		IsLoop("IsLoop"),
		IsNoStart("IsNoStart"),
		IsNoEnd("IsNoEnd"),
		PerformanceType("PerformanceType"),
		Marker("Marker"),
		PathIndex("PathIndex"),
		AutoID("AutoID"),
		CalledByActionID("CalledByActionID"),
		IterationByLoopActionID("IterationByLoopActionID"),
		EndTime("EndTime"),
		hostname("hostname"),
		Message("Message"),
		MicroflowPerformanceIteration_LoopAction("PerformanceTool.MicroflowPerformanceIteration_LoopAction"),
		MicroflowPerformance_CalledByAction("PerformanceTool.MicroflowPerformance_CalledByAction");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public MicroflowPerformance(IContext context)
	{
		this(context, Core.instantiate(context, "PerformanceTool.MicroflowPerformance"));
	}

	protected MicroflowPerformance(IContext context, IMendixObject microflowPerformanceMendixObject)
	{
		if (microflowPerformanceMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("PerformanceTool.MicroflowPerformance", microflowPerformanceMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a PerformanceTool.MicroflowPerformance");

		this.microflowPerformanceMendixObject = microflowPerformanceMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'new MicroflowPerformance(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static performancetool.proxies.MicroflowPerformance create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "PerformanceTool.MicroflowPerformance");
		return new performancetool.proxies.MicroflowPerformance(context, mendixObject);
	}

	/**
	 * @deprecated Use 'MicroflowPerformance.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static performancetool.proxies.MicroflowPerformance initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return performancetool.proxies.MicroflowPerformance.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static performancetool.proxies.MicroflowPerformance initialize(IContext context, IMendixObject mendixObject)
	{
		return new performancetool.proxies.MicroflowPerformance(context, mendixObject);
	}

	public static performancetool.proxies.MicroflowPerformance load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return performancetool.proxies.MicroflowPerformance.initialize(context, mendixObject);
	}

	public static java.util.List<performancetool.proxies.MicroflowPerformance> load(IContext context, String xpathConstraint) throws CoreException
	{
		java.util.List<performancetool.proxies.MicroflowPerformance> result = new java.util.ArrayList<performancetool.proxies.MicroflowPerformance>();
		for (IMendixObject obj : Core.retrieveXPathQuery(context, "//PerformanceTool.MicroflowPerformance" + xpathConstraint))
			result.add(performancetool.proxies.MicroflowPerformance.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final String getName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(IContext context, String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Duration
	 */
	public final Long getDuration()
	{
		return getDuration(getContext());
	}

	/**
	 * @param context
	 * @return value of Duration
	 */
	public final Long getDuration(IContext context)
	{
		return (Long) getMendixObject().getValue(context, MemberNames.Duration.toString());
	}

	/**
	 * Set value of Duration
	 * @param duration
	 */
	public final void setDuration(Long duration)
	{
		setDuration(getContext(), duration);
	}

	/**
	 * Set value of Duration
	 * @param context
	 * @param duration
	 */
	public final void setDuration(IContext context, Long duration)
	{
		getMendixObject().setValue(context, MemberNames.Duration.toString(), duration);
	}

	/**
	 * @return value of Timestamp
	 */
	public final java.util.Date getTimestamp()
	{
		return getTimestamp(getContext());
	}

	/**
	 * @param context
	 * @return value of Timestamp
	 */
	public final java.util.Date getTimestamp(IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Timestamp.toString());
	}

	/**
	 * Set value of Timestamp
	 * @param timestamp
	 */
	public final void setTimestamp(java.util.Date timestamp)
	{
		setTimestamp(getContext(), timestamp);
	}

	/**
	 * Set value of Timestamp
	 * @param context
	 * @param timestamp
	 */
	public final void setTimestamp(IContext context, java.util.Date timestamp)
	{
		getMendixObject().setValue(context, MemberNames.Timestamp.toString(), timestamp);
	}

	/**
	 * @return value of Key
	 */
	public final String getKey()
	{
		return getKey(getContext());
	}

	/**
	 * @param context
	 * @return value of Key
	 */
	public final String getKey(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Key.toString());
	}

	/**
	 * Set value of Key
	 * @param key
	 */
	public final void setKey(String key)
	{
		setKey(getContext(), key);
	}

	/**
	 * Set value of Key
	 * @param context
	 * @param key
	 */
	public final void setKey(IContext context, String key)
	{
		getMendixObject().setValue(context, MemberNames.Key.toString(), key);
	}

	/**
	 * @return value of IsMain
	 */
	public final Boolean getIsMain()
	{
		return getIsMain(getContext());
	}

	/**
	 * @param context
	 * @return value of IsMain
	 */
	public final Boolean getIsMain(IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.IsMain.toString());
	}

	/**
	 * Set value of IsMain
	 * @param ismain
	 */
	public final void setIsMain(Boolean ismain)
	{
		setIsMain(getContext(), ismain);
	}

	/**
	 * Set value of IsMain
	 * @param context
	 * @param ismain
	 */
	public final void setIsMain(IContext context, Boolean ismain)
	{
		getMendixObject().setValue(context, MemberNames.IsMain.toString(), ismain);
	}

	/**
	 * @return value of IsLoop
	 */
	public final Boolean getIsLoop()
	{
		return getIsLoop(getContext());
	}

	/**
	 * @param context
	 * @return value of IsLoop
	 */
	public final Boolean getIsLoop(IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.IsLoop.toString());
	}

	/**
	 * Set value of IsLoop
	 * @param isloop
	 */
	public final void setIsLoop(Boolean isloop)
	{
		setIsLoop(getContext(), isloop);
	}

	/**
	 * Set value of IsLoop
	 * @param context
	 * @param isloop
	 */
	public final void setIsLoop(IContext context, Boolean isloop)
	{
		getMendixObject().setValue(context, MemberNames.IsLoop.toString(), isloop);
	}

	/**
	 * @return value of IsNoStart
	 */
	public final Boolean getIsNoStart()
	{
		return getIsNoStart(getContext());
	}

	/**
	 * @param context
	 * @return value of IsNoStart
	 */
	public final Boolean getIsNoStart(IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.IsNoStart.toString());
	}

	/**
	 * Set value of IsNoStart
	 * @param isnostart
	 */
	public final void setIsNoStart(Boolean isnostart)
	{
		setIsNoStart(getContext(), isnostart);
	}

	/**
	 * Set value of IsNoStart
	 * @param context
	 * @param isnostart
	 */
	public final void setIsNoStart(IContext context, Boolean isnostart)
	{
		getMendixObject().setValue(context, MemberNames.IsNoStart.toString(), isnostart);
	}

	/**
	 * @return value of IsNoEnd
	 */
	public final Boolean getIsNoEnd()
	{
		return getIsNoEnd(getContext());
	}

	/**
	 * @param context
	 * @return value of IsNoEnd
	 */
	public final Boolean getIsNoEnd(IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.IsNoEnd.toString());
	}

	/**
	 * Set value of IsNoEnd
	 * @param isnoend
	 */
	public final void setIsNoEnd(Boolean isnoend)
	{
		setIsNoEnd(getContext(), isnoend);
	}

	/**
	 * Set value of IsNoEnd
	 * @param context
	 * @param isnoend
	 */
	public final void setIsNoEnd(IContext context, Boolean isnoend)
	{
		getMendixObject().setValue(context, MemberNames.IsNoEnd.toString(), isnoend);
	}

	/**
	 * Set value of PerformanceType
	 * @param performancetype
	 */
	public final performancetool.proxies.PerformanceTypeEnum getPerformanceType()
	{
		return getPerformanceType(getContext());
	}

	/**
	 * @param context
	 * @return value of PerformanceType
	 */
	public final performancetool.proxies.PerformanceTypeEnum getPerformanceType(IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.PerformanceType.toString());
		if (obj == null)
			return null;

		return performancetool.proxies.PerformanceTypeEnum.valueOf((String) obj);
	}

	/**
	 * Set value of PerformanceType
	 * @param performancetype
	 */
	public final void setPerformanceType(performancetool.proxies.PerformanceTypeEnum performancetype)
	{
		setPerformanceType(getContext(), performancetype);
	}

	/**
	 * Set value of PerformanceType
	 * @param context
	 * @param performancetype
	 */
	public final void setPerformanceType(IContext context, performancetool.proxies.PerformanceTypeEnum performancetype)
	{
		if (performancetype != null)
			getMendixObject().setValue(context, MemberNames.PerformanceType.toString(), performancetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.PerformanceType.toString(), null);
	}

	/**
	 * @return value of Marker
	 */
	public final String getMarker()
	{
		return getMarker(getContext());
	}

	/**
	 * @param context
	 * @return value of Marker
	 */
	public final String getMarker(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Marker.toString());
	}

	/**
	 * Set value of Marker
	 * @param marker
	 */
	public final void setMarker(String marker)
	{
		setMarker(getContext(), marker);
	}

	/**
	 * Set value of Marker
	 * @param context
	 * @param marker
	 */
	public final void setMarker(IContext context, String marker)
	{
		getMendixObject().setValue(context, MemberNames.Marker.toString(), marker);
	}

	/**
	 * @return value of PathIndex
	 */
	public final Integer getPathIndex()
	{
		return getPathIndex(getContext());
	}

	/**
	 * @param context
	 * @return value of PathIndex
	 */
	public final Integer getPathIndex(IContext context)
	{
		return (Integer) getMendixObject().getValue(context, MemberNames.PathIndex.toString());
	}

	/**
	 * Set value of PathIndex
	 * @param pathindex
	 */
	public final void setPathIndex(Integer pathindex)
	{
		setPathIndex(getContext(), pathindex);
	}

	/**
	 * Set value of PathIndex
	 * @param context
	 * @param pathindex
	 */
	public final void setPathIndex(IContext context, Integer pathindex)
	{
		getMendixObject().setValue(context, MemberNames.PathIndex.toString(), pathindex);
	}

	/**
	 * @return value of AutoID
	 */
	public final Long getAutoID()
	{
		return getAutoID(getContext());
	}

	/**
	 * @param context
	 * @return value of AutoID
	 */
	public final Long getAutoID(IContext context)
	{
		return (Long) getMendixObject().getValue(context, MemberNames.AutoID.toString());
	}

	/**
	 * Set value of AutoID
	 * @param autoid
	 */
	public final void setAutoID(Long autoid)
	{
		setAutoID(getContext(), autoid);
	}

	/**
	 * Set value of AutoID
	 * @param context
	 * @param autoid
	 */
	public final void setAutoID(IContext context, Long autoid)
	{
		getMendixObject().setValue(context, MemberNames.AutoID.toString(), autoid);
	}

	/**
	 * @return value of CalledByActionID
	 */
	public final Long getCalledByActionID()
	{
		return getCalledByActionID(getContext());
	}

	/**
	 * @param context
	 * @return value of CalledByActionID
	 */
	public final Long getCalledByActionID(IContext context)
	{
		return (Long) getMendixObject().getValue(context, MemberNames.CalledByActionID.toString());
	}

	/**
	 * Set value of CalledByActionID
	 * @param calledbyactionid
	 */
	public final void setCalledByActionID(Long calledbyactionid)
	{
		setCalledByActionID(getContext(), calledbyactionid);
	}

	/**
	 * Set value of CalledByActionID
	 * @param context
	 * @param calledbyactionid
	 */
	public final void setCalledByActionID(IContext context, Long calledbyactionid)
	{
		getMendixObject().setValue(context, MemberNames.CalledByActionID.toString(), calledbyactionid);
	}

	/**
	 * @return value of IterationByLoopActionID
	 */
	public final Long getIterationByLoopActionID()
	{
		return getIterationByLoopActionID(getContext());
	}

	/**
	 * @param context
	 * @return value of IterationByLoopActionID
	 */
	public final Long getIterationByLoopActionID(IContext context)
	{
		return (Long) getMendixObject().getValue(context, MemberNames.IterationByLoopActionID.toString());
	}

	/**
	 * Set value of IterationByLoopActionID
	 * @param iterationbyloopactionid
	 */
	public final void setIterationByLoopActionID(Long iterationbyloopactionid)
	{
		setIterationByLoopActionID(getContext(), iterationbyloopactionid);
	}

	/**
	 * Set value of IterationByLoopActionID
	 * @param context
	 * @param iterationbyloopactionid
	 */
	public final void setIterationByLoopActionID(IContext context, Long iterationbyloopactionid)
	{
		getMendixObject().setValue(context, MemberNames.IterationByLoopActionID.toString(), iterationbyloopactionid);
	}

	/**
	 * @return value of EndTime
	 */
	public final java.util.Date getEndTime()
	{
		return getEndTime(getContext());
	}

	/**
	 * @param context
	 * @return value of EndTime
	 */
	public final java.util.Date getEndTime(IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.EndTime.toString());
	}

	/**
	 * Set value of EndTime
	 * @param endtime
	 */
	public final void setEndTime(java.util.Date endtime)
	{
		setEndTime(getContext(), endtime);
	}

	/**
	 * Set value of EndTime
	 * @param context
	 * @param endtime
	 */
	public final void setEndTime(IContext context, java.util.Date endtime)
	{
		getMendixObject().setValue(context, MemberNames.EndTime.toString(), endtime);
	}

	/**
	 * @return value of hostname
	 */
	public final String gethostname()
	{
		return gethostname(getContext());
	}

	/**
	 * @param context
	 * @return value of hostname
	 */
	public final String gethostname(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.hostname.toString());
	}

	/**
	 * Set value of hostname
	 * @param hostname
	 */
	public final void sethostname(String hostname)
	{
		sethostname(getContext(), hostname);
	}

	/**
	 * Set value of hostname
	 * @param context
	 * @param hostname
	 */
	public final void sethostname(IContext context, String hostname)
	{
		getMendixObject().setValue(context, MemberNames.hostname.toString(), hostname);
	}

	/**
	 * @return value of Message
	 */
	public final String getMessage()
	{
		return getMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of Message
	 */
	public final String getMessage(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Message.toString());
	}

	/**
	 * Set value of Message
	 * @param message
	 */
	public final void setMessage(String message)
	{
		setMessage(getContext(), message);
	}

	/**
	 * Set value of Message
	 * @param context
	 * @param message
	 */
	public final void setMessage(IContext context, String message)
	{
		getMendixObject().setValue(context, MemberNames.Message.toString(), message);
	}

	/**
	 * @return value of MicroflowPerformanceIteration_LoopAction
	 */
	public final performancetool.proxies.ActionPerformance getMicroflowPerformanceIteration_LoopAction() throws CoreException
	{
		return getMicroflowPerformanceIteration_LoopAction(getContext());
	}

	/**
	 * @param context
	 * @return value of MicroflowPerformanceIteration_LoopAction
	 */
	public final performancetool.proxies.ActionPerformance getMicroflowPerformanceIteration_LoopAction(IContext context) throws CoreException
	{
		performancetool.proxies.ActionPerformance result = null;
		IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MicroflowPerformanceIteration_LoopAction.toString());
		if (identifier != null)
			result = performancetool.proxies.ActionPerformance.load(context, identifier);
		return result;
	}

	/**
	 * Set value of MicroflowPerformanceIteration_LoopAction
	 * @param microflowperformanceiteration_loopaction
	 */
	public final void setMicroflowPerformanceIteration_LoopAction(performancetool.proxies.ActionPerformance microflowperformanceiteration_loopaction)
	{
		setMicroflowPerformanceIteration_LoopAction(getContext(), microflowperformanceiteration_loopaction);
	}

	/**
	 * Set value of MicroflowPerformanceIteration_LoopAction
	 * @param context
	 * @param microflowperformanceiteration_loopaction
	 */
	public final void setMicroflowPerformanceIteration_LoopAction(IContext context, performancetool.proxies.ActionPerformance microflowperformanceiteration_loopaction)
	{
		if (microflowperformanceiteration_loopaction == null)
			getMendixObject().setValue(context, MemberNames.MicroflowPerformanceIteration_LoopAction.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.MicroflowPerformanceIteration_LoopAction.toString(), microflowperformanceiteration_loopaction.getMendixObject().getId());
	}

	/**
	 * @return value of MicroflowPerformance_CalledByAction
	 */
	public final performancetool.proxies.ActionPerformance getMicroflowPerformance_CalledByAction() throws CoreException
	{
		return getMicroflowPerformance_CalledByAction(getContext());
	}

	/**
	 * @param context
	 * @return value of MicroflowPerformance_CalledByAction
	 */
	public final performancetool.proxies.ActionPerformance getMicroflowPerformance_CalledByAction(IContext context) throws CoreException
	{
		performancetool.proxies.ActionPerformance result = null;
		IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MicroflowPerformance_CalledByAction.toString());
		if (identifier != null)
			result = performancetool.proxies.ActionPerformance.load(context, identifier);
		return result;
	}

	/**
	 * Set value of MicroflowPerformance_CalledByAction
	 * @param microflowperformance_calledbyaction
	 */
	public final void setMicroflowPerformance_CalledByAction(performancetool.proxies.ActionPerformance microflowperformance_calledbyaction)
	{
		setMicroflowPerformance_CalledByAction(getContext(), microflowperformance_calledbyaction);
	}

	/**
	 * Set value of MicroflowPerformance_CalledByAction
	 * @param context
	 * @param microflowperformance_calledbyaction
	 */
	public final void setMicroflowPerformance_CalledByAction(IContext context, performancetool.proxies.ActionPerformance microflowperformance_calledbyaction)
	{
		if (microflowperformance_calledbyaction == null)
			getMendixObject().setValue(context, MemberNames.MicroflowPerformance_CalledByAction.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.MicroflowPerformance_CalledByAction.toString(), microflowperformance_calledbyaction.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return microflowPerformanceMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final performancetool.proxies.MicroflowPerformance that = (performancetool.proxies.MicroflowPerformance) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "PerformanceTool.MicroflowPerformance";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().getGuid();
	}
}

// This file was generated by Mendix Business Modeler 4.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package performancetool.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class Message
{
	private final IMendixObject messageMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "PerformanceTool.Message";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Timestamp("Timestamp"),
		TimestampString("TimestampString"),
		Level("Level"),
		Node("Node"),
		Message("Message"),
		StackTrace("StackTrace"),
		HasStackTrace("HasStackTrace"),
		AutoID("AutoID"),
		hostname("hostname"),
		prefix("prefix");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public Message(IContext context)
	{
		this(context, Core.instantiate(context, "PerformanceTool.Message"));
	}

	protected Message(IContext context, IMendixObject messageMendixObject)
	{
		if (messageMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("PerformanceTool.Message", messageMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a PerformanceTool.Message");

		this.messageMendixObject = messageMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'new Message(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static performancetool.proxies.Message create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "PerformanceTool.Message");
		return new performancetool.proxies.Message(context, mendixObject);
	}

	/**
	 * @deprecated Use 'Message.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static performancetool.proxies.Message initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return performancetool.proxies.Message.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static performancetool.proxies.Message initialize(IContext context, IMendixObject mendixObject)
	{
		return new performancetool.proxies.Message(context, mendixObject);
	}

	public static performancetool.proxies.Message load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return performancetool.proxies.Message.initialize(context, mendixObject);
	}

	public static java.util.List<performancetool.proxies.Message> load(IContext context, String xpathConstraint) throws CoreException
	{
		java.util.List<performancetool.proxies.Message> result = new java.util.ArrayList<performancetool.proxies.Message>();
		for (IMendixObject obj : Core.retrieveXPathQuery(context, "//PerformanceTool.Message" + xpathConstraint))
			result.add(performancetool.proxies.Message.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Timestamp
	 */
	public final java.util.Date getTimestamp()
	{
		return getTimestamp(getContext());
	}

	/**
	 * @param context
	 * @return value of Timestamp
	 */
	public final java.util.Date getTimestamp(IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Timestamp.toString());
	}

	/**
	 * Set value of Timestamp
	 * @param timestamp
	 */
	public final void setTimestamp(java.util.Date timestamp)
	{
		setTimestamp(getContext(), timestamp);
	}

	/**
	 * Set value of Timestamp
	 * @param context
	 * @param timestamp
	 */
	public final void setTimestamp(IContext context, java.util.Date timestamp)
	{
		getMendixObject().setValue(context, MemberNames.Timestamp.toString(), timestamp);
	}

	/**
	 * @return value of TimestampString
	 */
	public final String getTimestampString()
	{
		return getTimestampString(getContext());
	}

	/**
	 * @param context
	 * @return value of TimestampString
	 */
	public final String getTimestampString(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.TimestampString.toString());
	}

	/**
	 * Set value of TimestampString
	 * @param timestampstring
	 */
	public final void setTimestampString(String timestampstring)
	{
		setTimestampString(getContext(), timestampstring);
	}

	/**
	 * Set value of TimestampString
	 * @param context
	 * @param timestampstring
	 */
	public final void setTimestampString(IContext context, String timestampstring)
	{
		getMendixObject().setValue(context, MemberNames.TimestampString.toString(), timestampstring);
	}

	/**
	 * Set value of Level
	 * @param level
	 */
	public final performancetool.proxies.Level getLevel()
	{
		return getLevel(getContext());
	}

	/**
	 * @param context
	 * @return value of Level
	 */
	public final performancetool.proxies.Level getLevel(IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Level.toString());
		if (obj == null)
			return null;

		return performancetool.proxies.Level.valueOf((String) obj);
	}

	/**
	 * Set value of Level
	 * @param level
	 */
	public final void setLevel(performancetool.proxies.Level level)
	{
		setLevel(getContext(), level);
	}

	/**
	 * Set value of Level
	 * @param context
	 * @param level
	 */
	public final void setLevel(IContext context, performancetool.proxies.Level level)
	{
		if (level != null)
			getMendixObject().setValue(context, MemberNames.Level.toString(), level.toString());
		else
			getMendixObject().setValue(context, MemberNames.Level.toString(), null);
	}

	/**
	 * @return value of Node
	 */
	public final String getNode()
	{
		return getNode(getContext());
	}

	/**
	 * @param context
	 * @return value of Node
	 */
	public final String getNode(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Node.toString());
	}

	/**
	 * Set value of Node
	 * @param node
	 */
	public final void setNode(String node)
	{
		setNode(getContext(), node);
	}

	/**
	 * Set value of Node
	 * @param context
	 * @param node
	 */
	public final void setNode(IContext context, String node)
	{
		getMendixObject().setValue(context, MemberNames.Node.toString(), node);
	}

	/**
	 * @return value of Message
	 */
	public final String getMessage()
	{
		return getMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of Message
	 */
	public final String getMessage(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Message.toString());
	}

	/**
	 * Set value of Message
	 * @param message
	 */
	public final void setMessage(String message)
	{
		setMessage(getContext(), message);
	}

	/**
	 * Set value of Message
	 * @param context
	 * @param message
	 */
	public final void setMessage(IContext context, String message)
	{
		getMendixObject().setValue(context, MemberNames.Message.toString(), message);
	}

	/**
	 * @return value of StackTrace
	 */
	public final String getStackTrace()
	{
		return getStackTrace(getContext());
	}

	/**
	 * @param context
	 * @return value of StackTrace
	 */
	public final String getStackTrace(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.StackTrace.toString());
	}

	/**
	 * Set value of StackTrace
	 * @param stacktrace
	 */
	public final void setStackTrace(String stacktrace)
	{
		setStackTrace(getContext(), stacktrace);
	}

	/**
	 * Set value of StackTrace
	 * @param context
	 * @param stacktrace
	 */
	public final void setStackTrace(IContext context, String stacktrace)
	{
		getMendixObject().setValue(context, MemberNames.StackTrace.toString(), stacktrace);
	}

	/**
	 * @return value of HasStackTrace
	 */
	public final Boolean getHasStackTrace()
	{
		return getHasStackTrace(getContext());
	}

	/**
	 * @param context
	 * @return value of HasStackTrace
	 */
	public final Boolean getHasStackTrace(IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.HasStackTrace.toString());
	}

	/**
	 * Set value of HasStackTrace
	 * @param hasstacktrace
	 */
	public final void setHasStackTrace(Boolean hasstacktrace)
	{
		setHasStackTrace(getContext(), hasstacktrace);
	}

	/**
	 * Set value of HasStackTrace
	 * @param context
	 * @param hasstacktrace
	 */
	public final void setHasStackTrace(IContext context, Boolean hasstacktrace)
	{
		getMendixObject().setValue(context, MemberNames.HasStackTrace.toString(), hasstacktrace);
	}

	/**
	 * @return value of AutoID
	 */
	public final Long getAutoID()
	{
		return getAutoID(getContext());
	}

	/**
	 * @param context
	 * @return value of AutoID
	 */
	public final Long getAutoID(IContext context)
	{
		return (Long) getMendixObject().getValue(context, MemberNames.AutoID.toString());
	}

	/**
	 * Set value of AutoID
	 * @param autoid
	 */
	public final void setAutoID(Long autoid)
	{
		setAutoID(getContext(), autoid);
	}

	/**
	 * Set value of AutoID
	 * @param context
	 * @param autoid
	 */
	public final void setAutoID(IContext context, Long autoid)
	{
		getMendixObject().setValue(context, MemberNames.AutoID.toString(), autoid);
	}

	/**
	 * @return value of hostname
	 */
	public final String gethostname()
	{
		return gethostname(getContext());
	}

	/**
	 * @param context
	 * @return value of hostname
	 */
	public final String gethostname(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.hostname.toString());
	}

	/**
	 * Set value of hostname
	 * @param hostname
	 */
	public final void sethostname(String hostname)
	{
		sethostname(getContext(), hostname);
	}

	/**
	 * Set value of hostname
	 * @param context
	 * @param hostname
	 */
	public final void sethostname(IContext context, String hostname)
	{
		getMendixObject().setValue(context, MemberNames.hostname.toString(), hostname);
	}

	/**
	 * @return value of prefix
	 */
	public final String getprefix()
	{
		return getprefix(getContext());
	}

	/**
	 * @param context
	 * @return value of prefix
	 */
	public final String getprefix(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.prefix.toString());
	}

	/**
	 * Set value of prefix
	 * @param prefix
	 */
	public final void setprefix(String prefix)
	{
		setprefix(getContext(), prefix);
	}

	/**
	 * Set value of prefix
	 * @param context
	 * @param prefix
	 */
	public final void setprefix(IContext context, String prefix)
	{
		getMendixObject().setValue(context, MemberNames.prefix.toString(), prefix);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return messageMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final performancetool.proxies.Message that = (performancetool.proxies.Message) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "PerformanceTool.Message";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().getGuid();
	}
}

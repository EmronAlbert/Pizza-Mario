// This file was generated by Mendix Business Modeler 4.0.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package performancetool.actions;

import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.UserAction;

/**
 * 
 */
public class InitializeLogNodes extends UserAction<Boolean>
{
	public InitializeLogNodes()
	{
		super();
	}

	@Override
	public Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		try {
	        Core.getLogger("JavaConsole").info("Initializing JavaConsole Logging.");
	
	     	OutputStream out = new OutputStream() {
	     		StringBuilder mBuf = new StringBuilder();

				private void checkAndLog() {
					if (mBuf.toString().contains("" + (char) 10)) flush();
				}
					
				private boolean isBlank(String str) {
				    int strLen;
				    if (str == null || (strLen = str.length()) == 0) {
				        return true;
				    }
				    for (int i = 0; i < strLen; i++) {
				        if ((Character.isWhitespace(str.charAt(i)) == false)) {
				            return false;
				        }
				    }
				    return true;
				}
				  
			    @Override
			    public void write(final int b) throws IOException {
				    mBuf.append((char) b);
				    checkAndLog();
			    }
			 
			    @Override
			    public void write(byte[] b, int off, int len) throws IOException {
			    	mBuf.append(new String(b, off, len));
				    checkAndLog();
			    }
			 
			    @Override
			    public void write(byte[] b) throws IOException {
			    	mBuf.append(new String(b, 0, b.length));
				    checkAndLog();
			    }
			
			    @Override
			    public void flush() {
			    	if (!isBlank(mBuf.toString())) {
			    		Core.getLogger("JavaConsole").debug(mBuf.toString());
			    	}
			    	mBuf = new StringBuilder();
				}
	        };
		 
	        System.setOut(new PrintStream(out, true));
	        System.setErr(new PrintStream(out, true));
	        System.out.println("Java Console output redirected to Mendix logger.");

	    }
	    catch (final Throwable ex) {
	        Core.getLogger("Logging").error("Exception while trying to initialize log nodes to the Mendix log manager.", ex);
	        return Boolean.FALSE;
	    }
        return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "InitializeLogNodes";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
